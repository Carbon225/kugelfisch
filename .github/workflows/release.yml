name: Release

on:
  push:
    branches: [ release ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        os: ['windows-2019', 'ubuntu-20.04']
        
    runs-on: ${{ matrix.os }}
            
    steps:
    - uses: actions/checkout@v2
      
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose

  build-release:
    needs: [test, create-release]
    strategy:
      matrix:
        os: ['windows-2019', 'ubuntu-20.04']
        
    runs-on: ${{ matrix.os }}
            
    steps:
    - uses: actions/checkout@v2
      
    - name: Build
      run: cargo build --release --verbose
      
    - name: Upload release assets (Linux)
      if: startsWith(${{ matrix.os }}, 'ubuntu')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./target/release/kugelfisch
        asset_name: kugelfisch-linux-amd64
        asset_content_type: application/octet-stream
        
    - name: Upload release assets (Windows)
      if: startsWith(${{ matrix.os }}, 'windows')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./target/release/kugelfisch.exe
        asset_name: kugelfisch-windows-amd64.exe
        asset_content_type: application/vnd.microsoft.portable-executable
      
  create-release:
    runs-on: ubuntu-20.04
    needs: test
    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}
    steps:
    - name: Create release draft
      id: create
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: New release draft ${{ github.ref }}
        draft: true
